#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       1                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
   10000                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
  9.9999999999999995E-07   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(71,53)
voltageDC.V
voltageDC.n.v
ground.p.v
ground.p.i
OutputCapacitor.v
OutputCapacitor.der(v)
OutputCapacitor.i
OutputCapacitor.n.v
OutputCapacitor.C
LoadResistor.i
LoadResistor.n.v
LoadResistor.R
switchedBoost.L_boost
switchedBoost.Vdrop
switchedBoost.r_diode
switchedBoost.g_diode
switchedBoost.r_switch
switchedBoost.g_switch
switchedBoost.f_s
switchedBoost.Input_n.v
switchedBoost.Input_n.i
switchedBoost.Output_p.i
switchedBoost.Output_n.v
switchedBoost.Output_n.i
switchedBoost.InputInductor.v
switchedBoost.InputInductor.i
switchedBoost.InputInductor.der(i)
switchedBoost.InputInductor.n.v
switchedBoost.InputInductor.L
switchedBoost.diode.v
switchedBoost.diode.r_on
switchedBoost.diode.g_off
switchedBoost.diode.v_knee
switchedBoost.diode.off
switchedBoost.diode.s
switchedBoost.diode.unitVoltage
switchedBoost.diode.unitCurrent
switchedBoost.switch.i
switchedBoost.switch.n.v
switchedBoost.switch.control
switchedBoost.switch.r_on
switchedBoost.switch.g_off
switchedBoost.switch.off
switchedBoost.switch.s
switchedBoost.switch.unitVoltage
switchedBoost.switch.unitCurrent
switchedBoost.sawtoothPWM.f
switchedBoost.sawtoothPWM.startTime
switchedBoost.sawtoothPWM.limiter.uMax
switchedBoost.sawtoothPWM.limiter.uMin
switchedBoost.sawtoothPWM.limiter.strict
switchedBoost.sawtoothPWM.limiter.limitsAtInit
switchedBoost.sawtoothPWM.limiter.y
switchedBoost.sawtoothPWM.greaterEqual.u1
switchedBoost.sawtoothPWM.greaterEqual.u2
switchedBoost.sawtoothPWM.zeroOrderHold.samplePeriod
switchedBoost.sawtoothPWM.zeroOrderHold.startTime
switchedBoost.sawtoothPWM.zeroOrderHold.sampleTrigger
switchedBoost.sawtoothPWM.zeroOrderHold.firstTrigger
switchedBoost.sawtoothPWM.zeroOrderHold.ySample
switchedBoost.sawtoothPWM.sawtooth.amplitude
switchedBoost.sawtoothPWM.sawtooth.period
switchedBoost.sawtoothPWM.sawtooth.nperiod
switchedBoost.sawtoothPWM.sawtooth.offset
switchedBoost.sawtoothPWM.sawtooth.startTime
switchedBoost.sawtoothPWM.sawtooth.T_start
switchedBoost.sawtoothPWM.sawtooth.count
DutyRatioValue.k
voltageSensor.p.i
voltageSensor.n.v
voltageSensor.n.i

double initialValue(71,6)
 -1  1.5000000000000000E+00       0                       0                
  1   280   # voltageDC.V
  0       0                       0                       0                
  6   260   # voltageDC.n.v
  0       0                       0                       0                
  6   260   # ground.p.v
  0       0                       0                       0                
  6   388   # ground.p.i
 -1       0                       0                       0                
  2   280   # OutputCapacitor.v
  0       0                       0                       0                
  3   256   # OutputCapacitor.der(v)
  0       0                       0                       0                
  6   256   # OutputCapacitor.i
  0       0                       0                       0                
  6   260   # OutputCapacitor.n.v
 -1  4.6999999999999999E-04       0                 1.0000000000000000E+100
  1   280   # OutputCapacitor.C
  0       0                       0                       0                
  6   256   # LoadResistor.i
  0       0                       0                       0                
  6   260   # LoadResistor.n.v
 -1      75                       0                       0                
  1   280   # LoadResistor.R
 -1  1.0000000000000000E-04       0                       0                
  1   280   # switchedBoost.L_boost
 -1  4.7499999999999998E-01       0                       0                
  1   280   # switchedBoost.Vdrop
 -1  1.0000000000000001E-05       0                       0                
  1   280   # switchedBoost.r_diode
 -1  1.0000000000000001E-05       0                       0                
  1   280   # switchedBoost.g_diode
 -1  1.0000000000000001E-05       0                       0                
  1   280   # switchedBoost.r_switch
 -1  1.0000000000000001E-05       0                       0                
  1   280   # switchedBoost.g_switch
 -1   50000                       0                       0                
  1   280   # switchedBoost.f_s
  0       0                       0                       0                
  6   260   # switchedBoost.Input_n.v
  0       0                       0                       0                
  6   388   # switchedBoost.Input_n.i
  0       0                       0                       0                
  6   388   # switchedBoost.Output_p.i
  0       0                       0                       0                
  6   260   # switchedBoost.Output_n.v
  0       0                       0                       0                
  6   388   # switchedBoost.Output_n.i
  0       0                       0                       0                
  6   256   # switchedBoost.InputInductor.v
 -1       0                       0                       0                
  2   280   # switchedBoost.InputInductor.i
  0       0                       0                       0                
  3   256   # switchedBoost.InputInductor.der(i)
  0       0                       0                       0                
  6   260   # switchedBoost.InputInductor.n.v
  0       0                       0                       0                
  6   256   # switchedBoost.InputInductor.L
  0       0                       0                       0                
  6   256   # switchedBoost.diode.v
  0       0                       0                 1.0000000000000000E+100
  6   256   # switchedBoost.diode.r_on
  0       0                       0                 1.0000000000000000E+100
  6   256   # switchedBoost.diode.g_off
  0       0                       0                 1.0000000000000000E+100
  6   256   # switchedBoost.diode.v_knee
  0       1                       0                       0                
  6  1377   # switchedBoost.diode.off
  0       0                       0                       0                
  6  1280   # switchedBoost.diode.s
  0       1                       0                       0                
  6   768   # switchedBoost.diode.unitVoltage
  0       1                       0                       0                
  6   768   # switchedBoost.diode.unitCurrent
  0       0                       0                       0                
  6   256   # switchedBoost.switch.i
  0       0                       0                       0                
  6   260   # switchedBoost.switch.n.v
  0       0                       0                       0                
  6   321   # switchedBoost.switch.control
  0       0                       0                 1.0000000000000000E+100
  6   256   # switchedBoost.switch.r_on
  0       0                       0                 1.0000000000000000E+100
  6   256   # switchedBoost.switch.g_off
  0       0                       0                       0                
  6  1345   # switchedBoost.switch.off
  0       0                       0                       0                
  6  1280   # switchedBoost.switch.s
  0       1                       0                       0                
  6   768   # switchedBoost.switch.unitVoltage
  0       1                       0                       0                
  6   768   # switchedBoost.switch.unitCurrent
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.f
 -1       0                       0                       0                
  1   280   # switchedBoost.sawtoothPWM.startTime
 -1       1                       0                       0                
  1   280   # switchedBoost.sawtoothPWM.limiter.uMax
 -1       0                       0                       0                
  1   280   # switchedBoost.sawtoothPWM.limiter.uMin
  0       0                       0                       0                
  6   257   # switchedBoost.sawtoothPWM.limiter.strict
  0       1                       0                       0                
  6   257   # switchedBoost.sawtoothPWM.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.limiter.y
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.greaterEqual.u1
  0       0                       0                       0                
  6   320   # switchedBoost.sawtoothPWM.greaterEqual.u2
  0  1.0000000000000001E-01  1.0000000000000000E-13 1.0000000000000000E+100
  6   256   # switchedBoost.sawtoothPWM.zeroOrderHold.samplePeriod
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.zeroOrderHold.startTime
  0       0                       0                       0                
  6  1345   # switchedBoost.sawtoothPWM.zeroOrderHold.sampleTrigger
  0       0                       0                       0                
  6  1353   # switchedBoost.sawtoothPWM.zeroOrderHold.firstTrigger
  0       0                       0                       0                
  6   328   # switchedBoost.sawtoothPWM.zeroOrderHold.ySample
  0       1                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.sawtooth.amplitude
  0       1                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # switchedBoost.sawtoothPWM.sawtooth.period
  0      -1                       0                       0                
  6   258   # switchedBoost.sawtoothPWM.sawtooth.nperiod
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.sawtooth.offset
  0       0                       0                       0                
  6   256   # switchedBoost.sawtoothPWM.sawtooth.startTime
  0       0                       0                       0                
  6  1344   # switchedBoost.sawtoothPWM.sawtooth.T_start
  0       0                       0                       0                
  6  1346   # switchedBoost.sawtoothPWM.sawtooth.count
 -1  7.5000000000000000E-01       0                       0                
  1   280   # DutyRatioValue.k
  0       0                       0                       0                
  6   388   # voltageSensor.p.i
  0       0                       0                       0                
  6   260   # voltageSensor.n.v
  0       0                       0                       0                
  6   388   # voltageSensor.n.i


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(71,139)
Voltage value [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Voltage drop between the two pins (= p.v - n.v) [V]
der(Voltage drop between the two pins (= p.v - n.v)) [V/s]
Current flowing from pin p to pin n [A]
Potential at the pin [V]
Capacitance [F]
Current flowing from pin p to pin n [A]
Potential at the pin [V]
Resistance [Ohm]
Boost input indctance [H]
Diode forward voltage drop [V]
Diode forward resistance [Ohm]
Diode reverse conductance [S]
Switch forward resistance [Ohm]
Switch reverse conductance [S]
Desired fixed switching frequency [Hz]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Voltage drop between the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Inductance [H]
Voltage drop between the two pins (= p.v - n.v) [V]
Forward ON state resistance [Ohm]
Backward OFF state conductance [S]
Forward threshold voltage [V]
Switching off-state indicator [:#(type=Boolean)]
Auxiliary variable for actual position on the diode characteristic [1]
[V]
[A]
Current flowing from pin p to pin n [A]
Potential at the pin [V]
true => switch is closed, false => switch is open [:#(type=Boolean)]
Forward ON state resistance [Ohm]
Backward OFF state conductance [S]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable for actual position on the switch characteristic [1]
[V]
[A]
Switching frequency [Hz]
Start time [s]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Boolean input signal
Connector of second Boolean input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signals
Output = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Constant output value
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]

