within MicroGrid.Control.Modulation;
model TriangPWM_3Ph
  extends Modelica.Electrical.PowerConverters.Icons.Control;
  parameter Modelica.SIunits.Frequency f = 1000 "Switching frequency";
  parameter Modelica.SIunits.Time startTime = 0 "Start time";
  Modelica.Blocks.Interfaces.BooleanOutput fireC "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {60, 110}), visible = true, iconTransformation(origin = {60, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Nonlinear.Limiter limiter(uMax = 1, uMin = -1) annotation(Placement(transformation(extent = {{-38, -10}, {-18, 10}}, origin = {80, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Logical.Less greaterEqual annotation(Placement(transformation(extent = {{10, 10}, {-10, -10}}, origin = {60, 10}, rotation = 270), visible = true));
  Modelica.Blocks.Sources.Trapezoid triangular(amplitude = 2, offset = -1, period = 1 / f, width = 0, rising = 0.5 / f, falling = 0.5 / f) annotation(Placement(transformation(origin = {-40, -30}, extent = {{-10, -10}, {10, 10}}, rotation = -270), visible = true));
  Interfaces.SignalBus mA_index annotation(Placement(transformation(extent = {{-124, -22}, {-64, 20}}, origin = {14, -118}, rotation = 0), visible = true, iconTransformation(origin = {-11.429, -94.286}, extent = {{-88.571, -15.714}, {-45.714, 14.286}}, rotation = 0)));
  Interfaces.Control2Real control2Real annotation(Placement(transformation(extent = {{-68, -10}, {-48, 10}}, origin = {80, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Logical.Not not1 annotation(Placement(visible = true, transformation(origin = {80, 50}, extent = {{-10, -10}, {10, 10}}, rotation = -270)));
  Modelica.Blocks.Interfaces.BooleanOutput fireC_compl "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {80, 110}), visible = true, iconTransformation(origin = {84.745, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Interfaces.SignalBus mB_index annotation(Placement(transformation(extent = {{-124, -22}, {-64, 20}}, origin = {94, -118}, rotation = 0), visible = true, iconTransformation(origin = {64.823, -94.007}, extent = {{-86.845, -15.408}, {-44.823, 14.007}}, rotation = 0)));
  Interfaces.SignalBus mC_index annotation(Placement(transformation(extent = {{-124, -22}, {-64, 20}}, origin = {174, -118}, rotation = 0), visible = true, iconTransformation(origin = {142.667, -95.333}, extent = {{-82.667, -14.667}, {-42.667, 13.333}}, rotation = 0)));
  Modelica.Blocks.Interfaces.BooleanOutput fireB "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {-10, 110}), visible = true, iconTransformation(origin = {-12.588, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Interfaces.BooleanOutput fireB_compl "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {10, 110}), visible = true, iconTransformation(origin = {13.02, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Interfaces.BooleanOutput fireA "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {-80, 110}), visible = true, iconTransformation(origin = {-85.413, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Interfaces.BooleanOutput fireA_compl "Firing PWM signal" annotation(Placement(transformation(extent = {{-10, -10}, {10, 10}}, rotation = 90, origin = {-60, 110}), visible = true, iconTransformation(origin = {-60, 110}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Nonlinear.Limiter limiter1(uMax = 1, uMin = -1) annotation(Placement(transformation(extent = {{-38, -10}, {-18, 10}}, origin = {0, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Logical.Less greaterEqual1 annotation(Placement(transformation(extent = {{10, 10}, {-10, -10}}, origin = {-10, 10}, rotation = 270), visible = true));
  Interfaces.Control2Real control2Real1 annotation(Placement(transformation(extent = {{-68, -10}, {-48, 10}}, origin = {0, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Nonlinear.Limiter limiter2(uMax = 1, uMin = -1) annotation(Placement(transformation(extent = {{-38, -10}, {-18, 10}}, origin = {-80, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Logical.Less greaterEqual2 annotation(Placement(transformation(extent = {{-10, 10}, {10, -10}}, origin = {-80, 10}, rotation = -270), visible = true));
  Interfaces.Control2Real control2Real2 annotation(Placement(transformation(extent = {{-68, -10}, {-48, 10}}, origin = {-80, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Logical.Not not2 annotation(Placement(visible = true, transformation(origin = {10, 50}, extent = {{-10, -10}, {10, 10}}, rotation = -270)));
  Modelica.Blocks.Logical.Not not3 annotation(Placement(visible = true, transformation(origin = {-60, 50}, extent = {{-10, -10}, {10, 10}}, rotation = -270)));
  Modelica.Blocks.Discrete.ZeroOrderHold zeroOrderHold(final startTime = startTime, final samplePeriod = 1 / (10 * f)) annotation(Placement(transformation(extent = {{-8, -10}, {12, 10}}, origin = {80, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Discrete.ZeroOrderHold zeroOrderHold1(final startTime = startTime, final samplePeriod = 1 / (10 * f)) annotation(Placement(transformation(extent = {{-8, -10}, {12, 10}}, origin = {0, -32}, rotation = -270), visible = true));
  Modelica.Blocks.Discrete.ZeroOrderHold zeroOrderHold2(final startTime = startTime, final samplePeriod = 1 / (10 * f)) annotation(Placement(transformation(extent = {{-8, -10}, {12, 10}}, origin = {-80, -32}, rotation = -270), visible = true));
equation
  connect(not1.y, fireC_compl) annotation(Line(visible = true, origin = {80, 85.5}, points = {{0, -24.5}, {0, 24.5}}, color = {190, 52, 178}));
  connect(greaterEqual2.u1, triangular.y) annotation(Line(visible = true, origin = {-60, -10.25}, points = {{-20, 8.25}, {-20, 0.25}, {20, 0.25}, {20, -8.75}}, color = {1, 37, 163}));
  connect(greaterEqual1.u1, triangular.y) annotation(Line(visible = true, origin = {-23.944, -10.25}, points = {{13.944, 8.25}, {13.944, 0.25}, {-16.056, 0.25}, {-16.056, -8.75}}, color = {1, 37, 163}));
  connect(greaterEqual.u1, triangular.y) annotation(Line(visible = true, origin = {16.056, -10.25}, points = {{43.944, 8.25}, {43.944, 0.25}, {-56.056, 0.25}, {-56.056, -8.75}}, color = {1, 37, 163}));
  connect(limiter2.u, control2Real2.OutputReal) annotation(Line(visible = true, origin = {-80, -76}, points = {{0, 4}, {0, -4}}, color = {1, 37, 163}));
  connect(limiter1.u, control2Real1.OutputReal) annotation(Line(visible = true, origin = {0, -76}, points = {{0, 4}, {0, -4}}, color = {1, 37, 163}));
  connect(limiter.u, control2Real.OutputReal) annotation(Line(visible = true, origin = {80, -76}, points = {{0, 4}, {0, -4}}, color = {1, 37, 163}));
  connect(mA_index, control2Real2.InputSignal) annotation(Line(visible = true, origin = {-79.967, -105.733}, points = {{-0.033, -13.267}, {-0.033, 6.633}, {0.067, 6.633}}, color = {0, 128, 0}));
  connect(mB_index, control2Real1.InputSignal) annotation(Line(visible = true, origin = {0.033, -105.733}, points = {{-0.033, -13.267}, {-0.033, 6.633}, {0.067, 6.633}}, color = {0, 128, 0}));
  connect(mC_index, control2Real.InputSignal) annotation(Line(visible = true, origin = {80.033, -105.733}, points = {{-0.033, -13.267}, {-0.033, 6.633}, {0.067, 6.633}}, color = {0, 128, 0}));
  connect(fireA, greaterEqual2.y) annotation(Line(visible = true, origin = {-80, 65.5}, points = {{0, 44.5}, {0, -44.5}}, color = {190, 52, 178}));
  connect(fireB, greaterEqual1.y) annotation(Line(visible = true, origin = {-10, 65.5}, points = {{0, 44.5}, {0, -44.5}}, color = {190, 52, 178}));
  connect(fireC, greaterEqual.y) annotation(Line(visible = true, origin = {60, 65.5}, points = {{0, 44.5}, {0, -44.5}}, color = {190, 52, 178}));
  connect(fireB_compl, not2.y) annotation(Line(visible = true, origin = {10, 85.5}, points = {{0, 24.5}, {-0, -24.5}}, color = {190, 52, 178}));
  connect(fireA_compl, not3.y) annotation(Line(visible = true, origin = {-60, 85.5}, points = {{0, 24.5}, {0, -24.5}}, color = {190, 52, 178}));
  connect(not3.u, greaterEqual2.y) annotation(Line(visible = true, origin = {-70, 29.75}, points = {{10, 8.25}, {10, 0.25}, {-10, 0.25}, {-10, -8.75}}, color = {190, 52, 178}));
  connect(not2.u, greaterEqual1.y) annotation(Line(visible = true, origin = {0, 29.75}, points = {{10, 8.25}, {10, 0.25}, {-10, 0.25}, {-10, -8.75}}, color = {190, 52, 178}));
  connect(not1.u, greaterEqual.y) annotation(Line(visible = true, origin = {70, 29.75}, points = {{10, 8.25}, {10, 0.25}, {-10, 0.25}, {-10, -8.75}}, color = {190, 52, 178}));
  connect(greaterEqual.u2, zeroOrderHold.y) annotation(Line(visible = true, origin = {74, -13.25}, points = {{-6, 11.25}, {-6, -2.75}, {6, -2.75}, {6, -5.75}}, color = {1, 37, 163}));
  connect(zeroOrderHold.u, limiter.y) annotation(Line(visible = true, origin = {80, -45.5}, points = {{0, 3.5}, {0, -3.5}}, color = {1, 37, 163}));
  connect(greaterEqual1.u2, zeroOrderHold1.y) annotation(Line(visible = true, origin = {-1, -13.25}, points = {{-1, 11.25}, {-1, -2.75}, {1, -2.75}, {1, -5.75}}, color = {1, 37, 163}));
  connect(zeroOrderHold1.u, limiter1.y) annotation(Line(visible = true, origin = {0, -45.5}, points = {{0, 3.5}, {0, -3.5}}, color = {1, 37, 163}));
  connect(greaterEqual2.u2, zeroOrderHold2.y) annotation(Line(visible = true, origin = {-84, -11.083}, points = {{-4, 9.083}, {-4, -0.583}, {4, -0.583}, {4, -7.917}}, color = {1, 37, 163}));
  connect(zeroOrderHold2.u, limiter2.y) annotation(Line(visible = true, origin = {-80, -45.5}, points = {{0, 3.5}, {0, -3.5}}, color = {1, 37, 163}));
  annotation(Diagram(coordinateSystem(extent = {{-100, -120}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics={  Text(visible = true, origin = {2.391, 45}, extent = {{-67.609, -35}, {67.609, 35}}, textString = "Three-Phase"), Text(visible = true, origin = {0, 13.196}, extent = {{-64.708, -15}, {64.708, 15}}, textString = "sinusoidal"), Text(visible = true, origin = {-1.55, -20}, extent = {{-44.648, -13.784}, {44.648, 13.784}}, textString = "PWM")}));
end TriangPWM_3Ph;
